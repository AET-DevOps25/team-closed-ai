---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-project-service
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $.Release.Name }}-project-service
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}-project-service
      annotations:
        redeployAt: "{{ now | unixEpoch }}"
    spec:
      imagePullSecrets:
        - name: ghcr-secret
      containers:
        - name: project-service
          image: "{{ $.Values.services.project.image.repository }}:{{ $.Values.services.project.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.services.project.port }}
          envFrom:
            - configMapRef:
                name: {{ $.Release.Name }}-config
            - secretRef:
                name: {{ $.Release.Name }}-secret

---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Release.Name }}-project-service
  namespace: {{ .Values.namespace }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.services.project.port }}"
    prometheus.io/path: "/actuator/prometheus"
spec:
  selector:
    app: {{ $.Release.Name }}-project-service
  ports:
    - port: {{ $.Values.services.project.port }}
      targetPort: {{ $.Values.services.project.port }}
  type: ClusterIP