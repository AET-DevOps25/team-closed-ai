name: Deploy to AWS

on:
  workflow_dispatch:
    inputs:
      AWS_CLI:
        description: "Copy the AWS CLI secret from the AWS Academy Learner Lab and paste it here"
        required: true
        type: string

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Mask AWS_CLI input
        shell: bash
        run: |
          SECRET=$(jq -r '.inputs.AWS_CLI' < "$GITHUB_EVENT_PATH")
          echo "::add-mask::$SECRET"

      - name: Write AWS CLI credentials
        shell: bash
        run: |
          mkdir -p $HOME/.aws
          echo "${{ github.event.inputs.AWS_CLI }}" > $HOME/.aws/credentials

      - name: Build .env by merging secrets and constants
        working-directory: ./genai
        shell: bash
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "OLLAMA_LLM_KEY=${{ secrets.OLLAMA_LLM_KEY }}" >> .env
          cat .env.aws >> .env

      - name: Copy Private Deployer Key
        shell: bash
        run: |
          mkdir -p $HOME/.ssh
          echo "${{ secrets.CLOSEDAI_DEPLOYER_PRIVATE_KEY }}" > $HOME/.ssh/closedai-deployer
          chmod 600 $HOME/.ssh/closedai-deployer

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        working-directory: ./terraform
        shell: bash
        run: terraform init

      - name: Terraform apply
        working-directory: ./terraform
        shell: bash
        run: terraform apply -auto-approve

      - name: Get IP
        id: extract_ip
        working-directory: ./terraform
        shell: bash
        run: |
          echo "ELASTIC_IP=$(terraform output -raw elastic_ip)" >> $GITHUB_ENV

      - name: Run Ansible
        working-directory: ./ansible
        shell: bash
        env:
          ELASTIC_IP: ${{ env.ELASTIC_IP }}
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          ansible-playbook -i inventory.ini playbook.yml \
            --extra-vars "elastic_ip=${ELASTIC_IP}"
