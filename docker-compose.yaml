services:
  client:
    build:
      context: ./client
      dockerfile: local.Dockerfile
    ports:
      - "5173:3000"
    environment:
      - VITE_API_URL=https://closed-ai.student.k8s.aet.cit.tum.de/

  traefik:
    image: traefik:v3.4.1
    container_name: traefik
    ports:
      - "80:80"    # HTTP entrypoint
      - "8080:8080"  # dashboard (insecure)
    command:
      - --api.insecure=true
      - --providers.docker=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  project-service:
    build:
      context: ./server
      dockerfile: project-service/Dockerfile
    expose:
      - "8083"
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.project.rule=PathPrefix(`/projects`)"
      - "traefik.http.services.project.loadbalancer.server.port=8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/closedai
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_PROFILES_ACTIVE=shared,shared-docker

  user-service:
    build:
      context: ./server
      dockerfile: user-service/Dockerfile
    expose:
      - "8082"
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user.rule=PathPrefix(`/users`)"
      - "traefik.http.services.user.loadbalancer.server.port=8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/closedai
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_PROFILES_ACTIVE=shared,shared-docker

  task-service:
    build:
      context: ./server
      dockerfile: task-service/Dockerfile
    expose:
      - "8081"
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.task.rule=PathPrefix(`/tasks`)"
      - "traefik.http.services.task.loadbalancer.server.port=8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/closedai
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_PROFILES_ACTIVE=shared,shared-docker

  postgres:
    image: pgvector/pgvector:pg16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=closedai
    volumes:
      - postgres_data:/var/lib/postgresql/data

  genai:
    build:
      context: ./genai
      dockerfile: Dockerfile
    env_file:
      - ./genai/.env
    ports:
      - "8084:8084"
    depends_on:
      - postgres
      - ollama
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.genai.rule=PathPrefix(`/genai`)"
      - "traefik.http.services.genai.loadbalancer.server.port=8084"
  
  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:latest
    env_file:
      - ./genai/.env
    depends_on:
      - postgres
      - ollama
    command: [ "--poll-interval", "5s" ]

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    env_file:
      - ./genai/.env
    volumes:
      - ollama_data:/ollama_data

volumes:
  postgres_data:
  ollama_data:
