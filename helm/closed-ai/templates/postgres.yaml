apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-postgres-config
  namespace: {{ $.Values.namespace }}
  labels:
    app: postgres
data:
  POSTGRES_DB: "{{ .Values.global.postgresql.auth.database }}"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-postgres-volume-claim
  namespace: {{ $.Values.namespace }}
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      imagePullSecrets:
        - name: dockerhub-secret
      containers:
        - name: postgres
          image: 'pgvector/pgvector:pg16'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-postgres-config
            - secretRef:
                name: {{ .Release.Name }}-secret
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: SPRING_DATASOURCE_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: SPRING_DATASOURCE_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
              subPath: pgdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgres-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres
  namespace: {{ $.Values.namespace }}
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: postgres
